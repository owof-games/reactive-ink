name: CI

env:
  # MINIMUM_VERSION: The minimum version of Unity.
  MINIMUM_VERSION: 6000.0.31f1 #2021.3
  EXCLUDE_FILTER: '(2023|a|b)'

on:
  push:
    branches:
      - main

jobs:
  # from https://github.com/mob-sakai/Coffee.Internal/blob/5d0bd14be288153555f975240608e7ee1576b091/.github/workflows/test.yml
  setup:
    name: Extract unity versions
    runs-on: ubuntu-latest
    outputs:
      unityVersions: ${{ steps.setup.outputs.unityVersions }}
    steps:
      - name: Find target Unity versions
        id: setup
        run: |
          echo "==== Target Unity Versions ===="
          LATEST_VERSIONS=`npx unity-changeset list --versions --latest-patch --min ${MINIMUM_VERSION} --json --all`
          ADDITIONAL_VERSIONS=[]

          VERSIONS=`echo "[${LATEST_VERSIONS}, ${ADDITIONAL_VERSIONS}]" \
            | jq -c '[ flatten | sort | unique | .[] | select( test("${{ env.EXCLUDE_FILTER }}") | not ) ]'`
          echo "unityVersions=${VERSIONS}" | tee $GITHUB_OUTPUT
  test:
    name: run unit tests
    runs-on: ubuntu-latest
    needs: setup
    strategy:
      fail-fast: false
      max-parallel: 9
      matrix:
        unityVersion: ${{ fromJson(needs.setup.outputs.unityVersions) }}
        # '2021.3.47f1', '6000.0.31f1', '2022.3.54f1',
        # unityVersion: [ '2022.3.54f1' ]
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: Cache Library
        uses: actions/cache@v3
        with:
          path: Library
          key: Library-${{ hashFiles('Assets/**', 'Packages/**', 'ProjectSettings/**') }}
          restore-keys: |
            Library-
      - uses: game-ci/unity-test-runner@v4
        env:
          UNITY_LICENSE: ${{ secrets.UNITY_LICENSE }}
          UNITY_EMAIL: ${{ secrets.UNITY_EMAIL }}
          UNITY_PASSWORD: ${{ secrets.UNITY_PASSWORD }}
        with:
          githubToken: ${{ secrets.GITHUB_TOKEN }}
          unityVersion: ${{ matrix.unityVersion }}
      - uses: actions/upload-artifact@v3
        if: always()
        with:
          name: Test results
          path: artifacts
      # see https://github.com/actions/checkout/issues/211, and in particular
      # https://github.com/actions/checkout/issues/211#issuecomment-611986243
      # and
      # https://github.com/actions/checkout/issues/211#issuecomment-1463921672
      # This also contains info about running self-hosted docker as non-root:
      # https://github.com/actions/runner/issues/434
      - name: Fix permissions
        shell: sh
        run: echo "user is $USER and workspace is $GITHUB_WORKSPACE and curr dir is $(pwd)" && sudo chown -R $USER:$USER $GITHUB_WORKSPACE/../..
  split-upm:
    needs: test
    name: split upm branch
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: split upm branch
        run: |
          git subtree split -P "$PKG_ROOT" -b upm
          git push -u origin upm
        env:
          PKG_ROOT: Packages/games.owof.reactive-ink
      - name: Fix permissions
        shell: sh
        run: echo "user is $USER and workspace is $GITHUB_WORKSPACE and curr dir is $(pwd)" && sudo chown -R $USER:$USER $GITHUB_WORKSPACE/../..